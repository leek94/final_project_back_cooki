<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.ClassDao">

	<!-- classes 등록 -->
	<insert id="insertClass" parameterType="classes">
	   <selectKey keyProperty="cno" resultType="int" order="BEFORE">
	      select seq_cno.nextval from dual
	   </selectKey>
	   insert into classes (
	      cno, ctitle, ccontent, cpersoncount, cprice, caddress, cstartdate,
	      cenddate, cdday, cstarttime, cendtime, chitcount, cround, mid, ctno
	   ) values (
	      #{cno}, #{ctitle}, #{ccontent}, #{cpersoncount}, #{cprice}, #{caddress}, #{cstartdate},
	      #{cenddate}, #{cdday}, #{cstarttime}, #{cendtime}, 0, #{cround}, #{mid}, #{ctno} 
	   )
	   
	</insert>
	<!-- hitcount -> 등록시에는 조회수가 없기 때문에 0으로 insert 해줌-->
	
	<!-- classes 수정 -->
	<update id="updateClassByCno" parameterType="classes">
		update classes set ctitle=#{ctitle}, ccontent=#{ccontent}, 
		cpersoncount=#{cpersoncount}, cprice=#{cprice}, caddress=#{caddress}, 
		cenddate=#{cenddate}, cdday=#{cdday}, 
		cstarttime=#{cstarttime}, cendtime=#{cendtime}, ctno=#{ctno}
		where cno=#{cno}
	</update>
	
	<!-- classThumbnail 등록 -->
	<insert id="insertClassThumbnail" parameterType="classThumbnail">
	   insert into classThumbnail (
	      ctorder, ctimgoname, ctimgdata, ctimgtype, cno
	   ) values (
	      #{ctorder}, #{ctimgoname}, #{ctimgdata}, #{ctimgtype}, #{cno}
	   )
	</insert>
	
	<!-- classThumbnail 삭제 -->
	<delete id="deleteClassThumbnail" parameterType="int">
		delete from classThumbnail where cno=#{cno}
	</delete>
	
	<!-- 클래스 리스트 받아오기 -->
	<select id="selectClassList" resultType="classes">
		<![CDATA[
		select cno, ctitle, cpersoncount, cdday, chitcount, cround, classes.mid, mname
		from classes, member
		where classes.mid=member.mid 
		and sysdate<cdday 
		 ]]>
	</select>
	
	<!-- 클래스 검색 결과 받아오기 -->
	<select id="selectSearchClass" parameterType="search" resultType="classes">
		<if test="searchTitle=='all'">
			SELECT DISTINCT c.cno, ctitle, cpersoncount, cdday, cround, mname
			FROM CLASSES c
			INNER JOIN MEMBER m on m.mid=c.mid
			INNER JOIN
			(select Distinct CNO
			from classitem ci
			where ciname LIKE '%' || #{searchText} || '%'
			)
			ci on c.cno=ci.cno
			WHERE ctitle LIKE '%' || #{searchText} || '%' OR ccontent LIKE '%' || #{searchText} ||'%';
		</if>
		<!--<if test="searchTitle=='titlecontent'">
			WHERE ctitle LIKE '%#{searchText}%' OR ccontent LIKE '%#{searchText}%';
		</if>-->
		<if test="searchTitle=='ingredient'">
			SELECT DISTINCT c.cno, ctitle, cpersoncount, cdday, cround, mname
			FROM CLASSES c
			INNER JOIN MEMBER m on m.mid=c.mid
			INNER JOIN
			(select Distinct CNO
			from classitem ci
			where ciname LIKE '%' || #{searchText} || '%'
			)
			ci on c.cno=ci.cno
		</if>
		<!--<if test="searchTitle=='category'">
			WHERE ctitle LIKE '%#{searchText}%' OR ccontent LIKE '%#{searchText}%';
		</if>-->
	
		
	</select>
	<!-- classes 읽기 -->
	<select id="selectByCno" parameterType="int" resultType="classes"> 
	select cno, ctitle, ccontent, cpersoncount, cprice, 
	caddress, cstartdate, cenddate, cdday, cstarttime, cendtime,chitcount,cround, classes.mid, classes.ctno, ctname, mnickname
	from classes, category, member
	where cno=#{cno} and classes.ctno= category.ctno and classes.mid=member.mid
	</select>
	
	<!-- hitcount 세기 -->
	<update id="updateBhitcount" parameterType="int">
	update classes set chitcount=chitcount+1 
	where cno=#{cno}
	</update>
	
	<!-- curriculum 등록 -->
	<insert id="insertCurriculum" parameterType="curriculum">
	   insert into curriculum (
	      cuorder, cutitle, cucontent, cuimgoname, cuimgdata, cuimgtype, cno
	   ) values (
	      #{cuorder}, #{cutitle}, #{cucontent}, #{cuimgoname}, #{cuimgdata}, #{cuimgtype}, #{cno}
	   )
	</insert>
	
	<!-- curriculum 수정  -->
	<update id="updateCurriculumByCno" parameterType="curriculum">
		update curriculum set cutitle=#{cutitle}, cucontent=#{cucontent}
		<if test="cuimgoname != null">
		,cuimgoname=#{cuimgoname}, cuimgdata=#{cuimgdata}, cuimgtype=#{cuimgtype}
		</if>
		where cno=#{cno} and cuorder=#{cuorder}
	</update>
	
	<!-- curriculum 삭제 -->
	<delete id="deleteCurriculumByCno" parameterType="int">
		delete from curriculum where cno=#{cno}
	</delete>
	
	<!-- classItem 등록 -->
	<insert id="insertItem" parameterType="classItem">
	   insert into classItem (
	      cino, ciname, cno
	   ) values (
	      #{cino}, #{ciname}, #{cno}
	   )
	</insert>
	
	<!-- classItem 삭제 -->
	<delete id="deleteClassItemByCno" parameterType="int">
		delete from classItem where cno = #{cno}
	</delete>
	
	<!-- 이미지 관련 정보를 제외한 curriculum 읽기  -->
	<select id="selectCurriculumByCno" parameterType="int" resultType="curriculum">
	   select cuorder, cutitle, cucontent, cno
	   from curriculum
	   where cno = #{cno}
	   order by cuorder 
	</select>
	
	<!-- classItem 읽기 -->
	<select id="selectClassItemByCno" parameterType="int" resultType="classItem">
	   select cino, ciname, cno
	   from classItem
	   where cno = #{cno}
	</select>
	
	<!-- classThumbnail 읽기 -->
	<select id="selectByClassThumbnail" parameterType="classThumbnail" resultType="classThumbnail">
		select ctorder, ctimgoname, ctimgdata, ctimgtype, cno
		from classThumbnail
		where cno = #{cno} and ctorder = #{ctorder}
	</select>
	
	<!-- curriculum 이미지 관련 정보 읽기  -->
	<select id="selectByCurriculumimg" parameterType="curriculum" resultType="curriculum">
		select cuorder, cuimgoname, cuimgdata, cuimgtype, cno
		from curriculum
		where cno= #{cno} and cuorder = #{cuorder}
	</select>
	
	<!-- curriculum 등록수 세기 -->
	<select id="selectCurriculumCountBycno" parameterType="int" resultType="int">
		select count(*)
		from curriculum
		where cno= #{cno}
	</select>
	
	<!-- curriculum 삭제 -->
	<delete id="deleteCurriculumCountBycuorder" parameterType="int">
		delete from curriculum 
		where cno= #{cno} and cuorder = #{cuorder}
	</delete>
	
	<!-- classThumbnail 세기  -->
	<select id="selectByClassThumbCount" parameterType="int" resultType="int">
		select count(*)
		from classThumbnail
		where cno= #{cno}
	</select>
	
	<!--클래스 신청 등록-->
	<insert id="insertClassApply" parameterType="participant">
	insert into Participant(cno, mid, isparticipant, pdate)
	values(#{cno}, #{mid}, 1, systimestamp)
	</insert>
	<!-- 클래스 참석 여부 -->
	<select id="selectByisParticipant" parameterType="participant" resultType="participant">
	select * from participant 
	where cno=#{cno} and mid=#{mid}
	</select>
	
	<delete id="deleteClassApply" parameterType="participant">
	delete from participant 
	where cno= #{cno} and mid=#{mid}
	</delete>
	
	<!-- 클래스 현재 신청 인원 수 받기-->
	<select id="selectParticipantsCounttByCno" parameterType="int" resultType="int">
	select count(*) from participant
	where cno=#{cno}
	</select>
	
	<!--커리어 경력 받기 -->
	<select id="selectCareerBymid" parameterType="String" resultType="career">
		select * from career
		where mid=#{mid}
	</select>
	
	<!-- 수상 경력 받기 -->
	<select id="selectAwardsBymid" parameterType="String" resultType="awards">
		select * from awards
		where mid=#{mid}
	</select>
	
	<!-- qna 등록 -->
	<insert id="insertQna" parameterType="qna">
		<selectKey keyProperty="qno" resultType="int" order="BEFORE">
	      select seq_qno.nextval from dual
	    </selectKey>
	   insert into qna (
	      qno, qtitle, qcontent, qdate, mid, cno
	   ) values (
	      #{qno}, #{qtitle}, #{qcontent}, sysdate, #{mid}, #{cno}
	   )	   
	</insert>
	
	<!-- qna 읽기 -->
	<select id="selectQnaByCno" parameterType="int" resultType="qna">
		select qno, qtitle, qcontent, qdate, qna.mid, cno, mnickname
		from qna, member
		where cno=#{cno} and qna.mid = member.mid
		order by qdate desc
	</select>
	
	<!-- qna 수정 -->
	<update id="updateQnaByQno" parameterType="qna">
		update qna set qtitle=#{qtitle}, qcontent=#{qcontent}
		where qno=#{qno}
	</update>
	
	<!-- qna 삭제 -->
	<delete id="deleteQnaByQno" parameterType="int">
		delete from qna 
		where qno=#{qno}
	</delete>

</mapper>