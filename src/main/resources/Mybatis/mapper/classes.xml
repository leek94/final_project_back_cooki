<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.ClassDao">

	<!-- classes 등록 -->
	<insert id="insertClass" parameterType="classes">
	   <selectKey keyProperty="cno" resultType="int" order="BEFORE">
	      select seq_cno.nextval from dual
	   </selectKey>
	   insert into classes (
	      cno, ctitle, ccontent, cpersoncount, cprice, caddress,
	      cdday, cstarttime, cendtime, chitcount, mid, ctno
	   ) values (
	      #{cno}, #{ctitle}, #{ccontent}, #{cpersoncount}, #{cprice}, #{caddress},
	      #{cdday}, #{cstarttime}, #{cendtime}, 0,  #{mid}, #{ctno} 
	   )
	   
	</insert>
	<!-- hitcount -> 등록시에는 조회수가 없기 때문에 0으로 insert 해줌-->
	
	<!-- classes 수정 -->
	<update id="updateClassByCno" parameterType="classes">
		update classes set ctitle=#{ctitle}, ccontent=#{ccontent}, 
		cpersoncount=#{cpersoncount}, cprice=#{cprice}, caddress=#{caddress}, 
		cdday=#{cdday}, 
		cstarttime=#{cstarttime}, cendtime=#{cendtime}, ctno=#{ctno}
		where cno=#{cno}
	</update>
	
	<!-- classThumbnail 등록 -->
	<insert id="insertClassThumbnail" parameterType="classThumbnail">
	   insert into classThumbnail (
	      ctorder, ctimgoname, ctimgdata, ctimgtype, cno
	   ) values (
	      #{ctorder}, #{ctimgoname}, #{ctimgdata}, #{ctimgtype}, #{cno}
	   )
	</insert>
	
	<!-- classThumbnail 삭제 -->
	<delete id="deleteClassThumbnail" parameterType="int">
		delete from classThumbnail where cno=#{cno}
	</delete>
	
	<!-- 클래스 리스트 받아오기 -->
<!--	<select id="selectClassList" parameterType="pager" resultType="classes">
		<![CDATA[
		select rnum,cno, ctitle, cpersoncount, cdday, chitcount, mname
		from 
			(select rownum as rnum, cno, ctitle, cpersoncount, cdday, chitcount, mname
			 from (
			 	select cno, ctitle, cpersoncount, cdday, chitcount, mname
				from classes,member
				where classes.mid=member.mid
				order by cdday
			 )
			 where rownum<=#{endRowNo}
		)
		where rnum>=#{startRowNo} 
		and sysdate<cdday
		 ]]>
	</select>-->
	
	<!-- 클래스 검색 결과 받아오기 -->
	<select id="selectSearchClass" resultType="classes">
		select cno, ctitle, chitcount, cpersoncount, cdday, mname, crratio,ccontent, reviewCount,ctname,rnum
				from(
					select cno, ctitle, chitcount, cpersoncount, cdday, mname, crratio,ccontent, reviewCount,ctname, rownum as rnum
					from(
					        select c.cno as cno, c.ctitle as ctitle, chitcount, cpersoncount, cdday, mname, crratio,ccontent, reviewCount,ctname
					            from classes c
					            left join (
					                select c.ctitle as ctitle, c.mid as mid ,round(avg(crratio), 1) as crratio, count(crratio) as reviewCount
					                from classreview cr, classes c
					               	where c.cno = cr.cno
					                group by c.ctitle, c.mid
					            ) cr on cr.ctitle = c.ctitle and c.mid = cr.mid
					            join member m on m.mid = c.mid
					            join category ct on ct.ctno = c.ctno
					           <![CDATA[ where sysdate < cdday ]]>
					        <if test="search.searchTitle=='all'">
									 and(c.cno
							            in(
							            select distinct cno from classitem where ciname like '%'||#{search.searchText} ||'%')
							         	or (c.ctitle like '%'||#{search.searchText} ||'%')
								    	or (ccontent like '%'||#{search.searchText} ||'%'))
								<if test="search.searchTitle=='ingredient'">
									and c.cno
							            in(
							            select distinct cno from classitem where ciname like '%'||#{search.searchText} ||'%')
								</if>
							</if>
							
							<if test="search.searchTitle=='titlecontent'">
								and ((c.ctitle like '%' || #{search.searchText} || '%') or (ccontent like '%' || #{search.searchText} || '%'))
							</if>
							
							<if test="search.searchTitle=='category'">
								and ctname=#{search.searchText}
							</if>
							<if test="search.searchSort==0">
								order by cdday
							</if>
							<if test="search.searchSort==1">
								order by chitcount desc
							</if>
							<if test="search.searchSort==2">
								order by  reviewCount desc nulls last
							</if>
							<if test="search.searchSort==3">
								order by crratio desc nulls last
							</if>
					    )
					    <![CDATA[ where rownum<=#{pager.endRowNo}]]>
				)
				<![CDATA[ where rnum>=#{pager.startRowNo}]]>
	</select>
	
	<!-- 클래스리스트 페이지 네이션-->
	
	<select id="getSearchCount" parameterType="search" resultType="int">
		select count(*) 
		from(
			select cno, ctitle, cpersoncount, cdday,  mname, crratio,ccontent, reviewCount,ctname
			from(
			        select c.cno as cno, ctitle, cpersoncount, cdday, mname, crratio,ccontent, reviewCount,ctname
			            from classes c
			            left join (
			                select cr.cno as cno, count(cr.cno) as reviewCount, avg(cr.crratio) as crratio
			                from classreview cr
			                group by cr.cno
			            ) cr on cr.cno = c.cno
			            join member m on m.mid = c.mid
			            join category ct on ct.ctno = c.ctno
			           <![CDATA[ where sysdate<cdday ]]>
			        <if test="searchTitle=='all' || searchTitle=='ingredient'">
							 and(c.cno
					            in( 
					            select distinct cno from classitem where ciname like '%'||#{searchText} ||'%'))
						<if test="searchTitle=='all'">
							or (ctitle like '%'||#{searchText} ||'%')
						    or (ccontent like '%'||#{searchText} ||'%')
						</if>
					</if>
					
					<if test="searchTitle=='titlecontent'">
						and ((ctitle like '%' || #{searchText} || '%') or (ccontent like '%' || #{searchText} || '%'))
					</if>
					
					<if test="searchTitle=='category'">
						and ctname=#{searchText}
					</if>
			    )
		)
	</select>
	
	<!-- classes 읽기 -->
	<select id="selectByCno" parameterType="int" resultType="classes"> 
	select cno, ctitle, ccontent, cpersoncount, cprice, 
	caddress, cdday, cstarttime, cendtime,chitcount, classes.mid, classes.ctno, ctname, mnickname, mimgoname
	from classes, category, member
	where cno=#{cno} and classes.ctno= category.ctno and classes.mid=member.mid
	</select>
	
	<!-- hitcount 세기 -->
	<update id="updateChitcount" parameterType="classes">
	update classes set chitcount=#{chitcount}
	where cno=#{cno}
	</update>
	
	<!-- curriculum 등록 -->
	<insert id="insertCurriculum" parameterType="curriculum">
	   insert into curriculum (
	      cuorder, cutitle, cucontent, cuimgoname, cuimgdata, cuimgtype, cno
	   ) values (
	      #{cuorder}, #{cutitle}, #{cucontent}, #{cuimgoname}, #{cuimgdata}, #{cuimgtype}, #{cno}
	   )
	</insert>
	
	<!-- curriculum 수정  -->
	<update id="updateCurriculumByCno" parameterType="curriculum">
		update curriculum set cutitle=#{cutitle}, cucontent=#{cucontent}
		<if test="cuimgoname != null">
		,cuimgoname=#{cuimgoname}, cuimgdata=#{cuimgdata}, cuimgtype=#{cuimgtype}
		</if>
		where cno=#{cno} and cuorder=#{cuorder}
	</update>
	
	<!-- curriculum 삭제 -->
	<delete id="deleteCurriculumByCno" parameterType="int">
		delete from curriculum where cno=#{cno}
	</delete>
	
	<!-- classItem 등록 -->
	<insert id="insertItem" parameterType="classItem">
	   insert into classItem (
	      cino, ciname, cno
	   ) values (
	      #{cino}, #{ciname}, #{cno}
	   )
	</insert>
	
	<!-- classItem 삭제 -->
	<delete id="deleteClassItemByCno" parameterType="int">
		delete from classItem where cno = #{cno}
	</delete>
	
	<!-- 이미지 관련 정보를 제외한 curriculum 읽기  -->
	<select id="selectCurriculumByCno" parameterType="int" resultType="curriculum">
	   select cuorder, cutitle, cucontent, cno
	   from curriculum
	   where cno = #{cno}
	   order by cuorder 
	</select>
	
	<!-- classItem 읽기 -->
	<select id="selectClassItemByCno" parameterType="int" resultType="classItem">
	   select cino, ciname, cno
	   from classItem
	   where cno = #{cno}
	</select>
	
	<!-- classThumbnail 읽기 -->
	<select id="selectByClassThumbnail" parameterType="classThumbnail" resultType="classThumbnail">
		select ctorder, ctimgoname, ctimgdata, ctimgtype, cno
		from classThumbnail
		where cno = #{cno} and ctorder = #{ctorder}
	</select>
	
	<!-- curriculum 이미지 관련 정보 읽기  -->
	<select id="selectByCurriculumimg" parameterType="curriculum" resultType="curriculum">
		select cuorder, cuimgoname, cuimgdata, cuimgtype, cno
		from curriculum
		where cno= #{cno} and cuorder = #{cuorder}
	</select>
	
	<!-- curriculum 등록수 세기 -->
	<select id="selectCurriculumCountBycno" parameterType="int" resultType="int">
		select count(*)
		from curriculum
		where cno= #{cno}
	</select>
	
	<!-- curriculum 삭제 -->
	<delete id="deleteCurriculumCountBycuorder" parameterType="int">
		delete from curriculum 
		where cno= #{cno} and cuorder = #{cuorder}
	</delete>
	
	<!-- classThumbnail 세기  -->
	<select id="selectByClassThumbCount" parameterType="int" resultType="int">
		select count(*)
		from classThumbnail
		where cno= #{cno}
	</select>
	
	<!--클래스 신청 등록-->
	<insert id="insertClassApply" parameterType="participant">
	insert into Participant(cno, mid, isparticipant, pdate)
	values(#{cno}, #{mid}, 0, systimestamp)
	</insert>
	<!-- 클래스 참석 여부 -->
	<select id="selectByisParticipant" parameterType="participant" resultType="participant">
	select * from participant 
	where cno=#{cno} and mid=#{mid}
	</select>
	
	<delete id="deleteClassApply" parameterType="participant">
	delete from participant 
	where cno= #{cno} and mid=#{mid}
	</delete>
	
	<!-- 클래스 현재 신청 인원 수 받기-->
	<select id="selectParticipantsCounttByCno" parameterType="int" resultType="int">
	select count(*) from participant
	where cno=#{cno}
	</select>
	
	<!--커리어 경력 받기 -->
	<select id="selectCareerBymid" parameterType="String" resultType="career">
		select * from career
		where mid=#{mid}
	</select>
	
	<!-- 수상 경력 받기 -->
	<select id="selectAwardsBymid" parameterType="String" resultType="awards">
		select * from awards
		where mid=#{mid}
	</select>

	<!-- !!!!!!아마도 리뷰큐앤에이 xml에 있을 수 있기 때문에 추후에 삭제할 예정임////// 클래스 리뷰 갯수 받아오기-->
	<select id="selectReviewCount" parameterType="int" resultType="int">
		select count(*)
		from classReview
		where cno=#{cno}
	</select>

	<!-- qna 등록 -->
	<insert id="insertQna" parameterType="qna">
		<selectKey keyProperty="qno" resultType="int" order="BEFORE">
	      select seq_qno.nextval from dual
	    </selectKey>
	   insert into qna (
	      qno, qtitle, qcontent, qdate, mid, cno
	   ) values (
	      #{qno}, #{qtitle}, #{qcontent}, sysdate, #{mid}, #{cno}
	   )	   
	</insert>
	
	<!-- qna 읽기 -->
	<select id="selectQnaByCno" parameterType="int" resultType="qna">
		select qno, qtitle, qcontent, qdate, qna.mid, cno, mnickname
		from qna, member
		where cno=#{cno} and qna.mid = member.mid
		order by qdate desc
	</select>
	
	<!-- qna 수정 -->
	<update id="updateQnaByQno" parameterType="qna">
		update qna set qtitle=#{qtitle}, qcontent=#{qcontent}
		where qno=#{qno}
	</update>
	
	<!-- qna 삭제 -->
	<delete id="deleteQnaByQno" parameterType="int">
		delete from qna 
		where qno=#{qno}
	</delete>
	
	
	<select id="selectBestClass" parameterType="int" resultType="classes">
		select rnum, cno, ctitle, chitcount
		from
			(
				select rownum as rnum, cno, ctitle, chitcount
				from classes 
				where <![CDATA[SYSDATE<CDDAY]]>
				order by chitcount desc
			)
		where <![CDATA[rnum <= #{number}]]>
	</select>
	
	<select id="selectParticipantList" parameterType="Int" resultType="ParticipantList">
		select m.mid, m.mname, c.ctitle, c.cdday, c.cstarttime, p.isparticipant
		from classes c
		join participant p on c.cno = p.cno
		join member m on m.mid = p.mid
		where c.cno = #{cno}
	</select>
	
	<update id="updateParticipant" parameterType="Participant">
		update participant set isParticipant = #{isParticipant}
		where mid = #{mid} and cno = #{cno}
	</update>
	
	<delete id="deleteClass">
		delete from classes where cno = #{cno}
	</delete>
</mapper>