<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.MemberDao">
	<insert id="insert" parameterType="Member">
		insert into Member(mid,mpassword, mname,menabled, mrole, mphonenum, mnickname)
		values(#{mid}, #{mpassword}, #{mname}, #{menabled}, #{mrole}, #{mphonenum}, #{mnickname})
	</insert>
	
	<insert id="insertCareer" parameterType="Career">
		insert into Career(cano,cacontent,mid)
		values(#{cano}, #{cacontent},#{mid})
	</insert>
	
	<insert id="insertAwards" parameterType="Awards">
		insert into Awards(ano, acontent, mid)
		values(#{ano}, #{acontent},#{mid})
	</insert>
	
	<select id="selectByMid" parameterType="String" resultType="Member">
		select mid, mname, mrole, menabled, mphonenum, mnickname,mpassword, mimgdata, mimgoname, mimgtype
		from member
		where mid=#{mid}
	</select>
	
	<select id="selectCareerBymid" parameterType="String" resultType="Career">
		select mid,cano,cacontent
		from career 
		where mid=#{mid}
	</select>
	
	<select id="selectAwardsBymid" parameterType="String" resultType="Awards">
		select mid,ano,acontent
		from awards
		where mid=#{mid}
	</select>
	
	<select id="selectMyProfile" parameterType="String" resultType="Member">
		select mid, mphonenum, mnickname, mrole, mimgoname
		from member
		where mid=#{mid}
	</select>
	
	<update id="updateNickname" parameterType="Member">
		update member set mnickname = #{mnickname}
		where mid = #{mid}
	</update>
	
	<update id="updatePassword" parameterType="Member">
		update member set mpassword = #{mpassword}
		where mid = #{mid}
	</update>
	
	<select id="selectEditorRecruitHistoryTotalCount">
		<![CDATA[
		select count(*)
		from(
				select cno, ctitle, cpersoncount, cdday, mname, member.mid
				from classes, member
				where classes.mid=#{mid} and  to_char(sysdate,'YYYYMMDD') >= to_char(cdday,'YYYYMMDD') and classes.mid = member.mid
		)
				]]>
	</select>

	<!-- 에디터가 열었던 클래스 -->
	<select id="selectPastClassesByMid" resultType="Classes">
		<![CDATA[
			select rnum, cno, ctitle, cpersoncount, cdday, mname, mid
			from(
				select rownum as rnum, cno, ctitle, cpersoncount, cdday, mname, mid
				from(
				select cno, ctitle, cpersoncount, cdday, mname, member.mid
				from classes, member
				where classes.mid=#{mid} and  to_char(sysdate,'YYYYMMDD') >= to_char(cdday,'YYYYMMDD') and classes.mid = member.mid
				order by cdday
				)
				where rownum<=#{pager.endRowNo}
				)
			where rnum>=#{pager.startRowNo}
		]]>
	</select>
	
	
	<select id="selectEditorNowRecruitTotalCount">
		<![CDATA[
		select count(*)
		from(
			select cno, ctitle, cpersoncount, cdday, mname, member.mid
			from classes, member
			where classes.mid=#{mid} and  to_char(sysdate,'YYYYMMDD') < to_char(cdday-1,'YYYYMMDD') and classes.mid = member.mid
		)
		]]>
	</select>
	
	<select id="selectNowClassesByMid" resultType="Classes">
		<![CDATA[
		select rnum, cno, ctitle, cpersoncount, cdday, mname, mid
		from(
			select rownum as rnum, cno, ctitle, cpersoncount, cdday, mname, mid
			from(
				select cno, ctitle, cpersoncount, cdday, mname, member.mid as mid
				from classes, member
				where classes.mid=#{mid} and to_char(sysdate,'YYYYMMDD') < to_char(cdday-1,'YYYYMMDD') and classes.mid = member.mid
				order by cdday
			)
			where rownum<=#{pager.endRowNo}
		)
		where rnum>=#{pager.startRowNo}
		]]>
	</select>
	
	<select id="selectMyClassHistoryTotalCount">
		<![CDATA[
		select count(*)
		from(
				select  cno, ctitle, cpersoncount, cdday, mname, member.mid
				from classes, member
				where cno in (
					select cno
					from Participant
					where mid=#{mid}
					) and to_char(sysdate,'YYYYMMDD') >= to_char(cdday,'YYYYMMDD') and classes.mid = member.mid
		)
		]]>
	</select>
	
	<select id="selectPastClassesByMidCno" resultType="Classes">
		<![CDATA[
		select rnum, cno, ctitle, cpersoncount, cdday, mname, mid
			from(
				select rownum as rnum, cno, ctitle, cpersoncount, cdday, mname, mid
					from(
					select  cno, ctitle, cpersoncount, cdday, mname, member.mid as mid
					from classes, member
					where cno in (
						select cno
						from Participant
						where mid=#{mid}
					) and to_char(sysdate,'YYYYMMDD') >= to_char(cdday,'YYYYMMDD') and classes.mid = member.mid
					order by cdday
					)
				where rownum<=#{pager.endRowNo}
			)
		 where rnum>=#{pager.startRowNo}
		]]>
	</select>
	
	<select id="selectMyNowClassTotalCount">
		<![CDATA[
		select count(*)
		from(
			select cno, ctitle, cpersoncount, cdday, mname, member.mid 
			from classes, member
			where cno in (
				select cno
				from Participant
				where mid=#{mid}
			) and to_char(sysdate,'YYYYMMDD') < to_char(cdday-1,'YYYYMMDD') and classes.mid = member.mid
		)
		]]>
	</select>
	
	<select id="selectNowClassesByMidCno" resultType="Classes">
		<![CDATA[
		select rnum, cno, ctitle, cpersoncount, cdday, mname, mid
		from(
			select rownum as rnum, cno, ctitle, cpersoncount, cdday, mname, mid
				from(
				select cno, ctitle, cpersoncount, cdday, mname, member.mid as mid 
				from classes, member
				where cno in (
					select cno
					from Participant
					where mid=#{mid}
				) and to_char(sysdate,'YYYYMMDD') < to_char(cdday-1,'YYYYMMDD') and classes.mid = member.mid
				order by cdday
				)
			where rownum<=#{pager.endRowNo}
		)
		 where rnum>=#{pager.startRowNo}
		]]>
	</select>
	
	<delete id="deleteCareers" parameterType="String">
		delete from career where mid = #{mid}
	</delete>
	
	<delete id="deleteAwards" parameterType="String">
		delete from awards where mid = #{mid}
	</delete>
	
	
	<select id="selectMyQandATotalCount">
		select count(*)
		from(
			select qno, qtitle, qcontent, qdate, qreply, qna.cno, classes.ctitle as ctitle
			from qna, classes
			where qna.mid=#{mid} and qna.cno = classes.cno
		)
	</select>
	
	<select id="selectQnaByMid" resultType="qna">
		<![CDATA[
		select rnum, qno, qtitle, qcontent, qdate, qreply, cno, ctitle
		from(
			select rownum as rnum, qno, qtitle, qcontent, qdate, qreply, cno, ctitle
			from(
			select qno, qtitle, qcontent, qdate, qreply, qna.cno as cno, classes.ctitle as ctitle
			from qna, classes
			where qna.mid=#{mid} and qna.cno = classes.cno
			order by qdate
			)
			where rownum<=#{pager.endRowNo}
		)
		where rnum>=#{pager.startRowNo}
		]]>
	</select>

	<update id="updateimage" parameterType="Member">
		update member 
		set mimgoname=#{mimgoname}, mimgtype = #{mimgtype}, mimgdata = #{mimgdata}
		where mid = #{mid}
	</update>
	
	<update id="deleteImg" parameterType="String">
		update member set mimgtype = null, mimgdata = null, mimgoname = null
		where mid = #{mid}
	</update>
	
	<update id="updateMrole" parameterType="Member">
		update member set mrole = #{mrole}
		where mid = #{mid}
	</update>
	
	<update id="updateMphonenum" parameterType="Member">
		update member set mphonenum = #{mphonenum}
		where mid = #{mid}
	</update>
	
	<select id="selectBynameAndPhonenum" parameterType="Member" resultType="Member">
		select mid
		from member
		where mname = #{mname} and mphonenum = #{mphonenum}	
	</select>
	
	<select id="selectMyrecipeTotalCount">
		select count(*)
		from recipe
		where recipe.mid = #{mid}
	</select>
	
	<select id="selectRecipeByMid" resultType="recipe">
		<![CDATA[
		select rnum, rno, rtitle, rhitcount, rdate, mnickname
		from(
			select rownum as rnum, rno, rtitle, rhitcount, rdate, mnickname
			from(
				select rno, rtitle, rhitcount, rdate, mnickname
				from recipe, member
				where recipe.mid=#{mid} and recipe.mid = member.mid
			)
			where rownum<=#{pager.endRowNo}
		)
		 where rnum>=#{pager.startRowNo}
		]]>
	</select>
	
	<select id="selectLikesCountByRno" parameterType="int" resultType="int">
		select count(*)
		from likes
		where rno=#{rno}
	</select>
	
	<select id="selectMyLIkeRecipeTotalCount">
		select count(*)
		from (
			select recipe.rno, rtitle, rhitcount, rdate, mnickname
			from recipe, likes, member
			where likes.mid=#{mid} and likes.rno = recipe.rno and recipe.mid = member.mid
		)
	</select>
	
	<select id="selectRecipeByMidLikes" resultType="recipe">
		<![CDATA[
		select rnum, rno, rtitle, rhitcount, rdate, mnickname
		from(
			select rownum as rnum, rno,rtitle, rhitcount, rdate, mnickname
			from(
			select recipe.rno as rno, rtitle, rhitcount, rdate, mnickname
			from recipe, likes, member
			where likes.mid=#{mid} and likes.rno = recipe.rno and recipe.mid = member.mid
			)
			where rownum<=#{pager.endRowNo}
		)
		where rnum>=#{pager.startRowNo}
		]]>
	</select>
	
	<select id="checkMid" parameterType="String" resultType="String">
		select mid
		from member
		where mid = #{mid}
	</select>
	
</mapper>