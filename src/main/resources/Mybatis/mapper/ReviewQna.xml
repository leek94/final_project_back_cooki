<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.ReviewQnaDao">

	<!-- qna 등록 -->
	<insert id="insertQna" parameterType="qna">
		<selectKey keyProperty="qno" resultType="int" order="BEFORE">
	      select seq_qno.nextval from dual
	    </selectKey>
	   insert into qna (
	      qno, qtitle, qcontent, qdate, mid, cno
	   ) values (
	      #{qno}, #{qtitle}, #{qcontent}, sysdate, #{mid}, #{cno}
	   )	   
	</insert>
	
	<!-- qna 등록된 갯수 세기 -->
	<select id="selectQnaCountByCno" parameterType="int" resultType="int">
		select count(*)
		from qna
		where cno=#{cno}
	</select>
	
	<!-- qna 페이지네이션 해서 읽기 -->
	<select id="selectQnaByCnoPager" resultType="qna">
		<![CDATA[
		select rnum, qno, qtitle, qcontent, qdate, mid, cno, mnickname, qreply, qreplydate, mimgoname
		from(
			select rownum as rnum, qno, qtitle, qcontent, qdate, mid, cno, mnickname, qreply, qreplydate, mimgoname
			from(
				select qno, qtitle, qcontent, qdate, qna.mid as mid, cno, mnickname, qreply, qreplydate, mimgoname
				from qna, member
				where cno=#{cno} and qna.mid = member.mid
				order by qdate desc
			)
			where rownum <= #{pager.endRowNo}
		)
		where rnum >= #{pager.startRowNo}
		]]>
	</select>
	
	<!-- qna 수정 -->
	<update id="updateQnaByQno" parameterType="qna">
		update qna set qtitle=#{qtitle}, qcontent=#{qcontent}
		where qno=#{qno}
	</update>
	
	<!-- qna 삭제 -->
	<delete id="deleteQnaByQno" parameterType="int">
		delete from qna 
		where qno=#{qno}
	</delete>
	
	<!-- qna 대댓글 수정(등록) -->
	<update id="updateQreplyByQno" parameterType="qna">
		update qna set qreply=#{qreply}, qreplydate=sysdate
		where qno=#{qno}
	</update>
	
	<!-- 클래스 review 등록 -->
	<insert id="insertClassReview" parameterType="classReview">
		<selectKey keyProperty="crno" resultType="int" order="BEFORE">
	      select seq_crno.nextval from dual
	    </selectKey>
	   insert into classReview (
	      crno, crtitle, crratio, crcontent, crdate, cno, mid
	   ) values (
	      #{crno}, #{crtitle}, #{crratio}, #{crcontent}, sysdate, #{cno}, #{mid}
	   )	   
	</insert>
	
	<!-- 클래스 review 등록된 갯수 세기 -->
	<select id="selectReviewCountByCno" parameterType="int" resultType="int">
		select count(*)
		from classReview
		where cno=#{cno}
	</select>
	
	<!-- 클래스 review 페이지네이션 해서 읽기 -->
	<select id="selectClassReviewByCnoPager" resultType="classReview">
		<![CDATA[
		select rnum, crno, crtitle, crcontent, crratio, crdate, cno, mid, mnickname, mimgoname
		from(
			select rownum as rnum, crno, crtitle, crcontent, crratio, crdate, cno, mid, mnickname, mimgoname
			from(
				select crno, crtitle, crcontent, crratio, crdate, cno, classreview.mid as mid, mnickname, mimgoname
				from classreview, member
				where cno=#{cno} and classreview.mid = member.mid
				order by crdate desc
			)
			where rownum <= #{pager.endRowNo}
		)
		where rnum >= #{pager.startRowNo}
		]]>
	</select>
	
	<!-- 클래스 review 평점 읽기 -->
	<select id="selectAvgCrratioByCno" parameterType="int" resultType="float">
		select round(avg(crratio), 1)
		from classreview
		where cno=#{cno}
		group by cno
	</select>
	
	<!-- 클래스 review 수정 -->
	<update id="updateClassReviewByCrno" parameterType="classReview">
		update classreview set crtitle=#{crtitle}, crcontent=#{crcontent}, crratio=#{crratio}
		where crno=#{crno}
	</update>
	
	<!-- 클래스 review 삭제 -->
	<delete id="deleteClassReviewByCrno" parameterType="int">
		delete from classReview 
		where crno=#{crno}
	</delete>

	<insert id="insertRecipeReview" parameterType="recipeReview">
		<selectKey keyProperty="rrno" resultType="int" order="BEFORE">
			select seq_rrno.nextval from dual
		</selectKey>
		insert into recipereview ( rrno, rrtitle, rrcontent, rrdate, mid, rno )
		values(#{rrno}, #{rrtitle}, #{rrcontent}, sysdate, #{mid}, #{rno})
	</insert>
	
	<select id="selectReviewCount">
		select count(*)
		from recipereview
		where rno = #{rno}
	</select>
	
	<select id="selectRecipeReviewsByRno" resultType="recipeReview">
	<![CDATA[
		select rnum, rrno, rrtitle, rrcontent, rrdate, member.mid as mid, mnickname, mimgoname
		from(
			select rownum as rnum, rrno, rrtitle, rrcontent, rrdate, member.mid as mid, mnickname, mimgoname
				from(
					select rrno, rrtitle, rrcontent, rrdate, member.mid as mid, mnickname, mimgoname
					from recipereview, member
					where recipereview.mid = member.mid
					and rno = #{rno}
					order by rrno desc
				)
			where rownum <= #{pager.endRowNo}
		)
		where rnum >= #{pager.startRowNo}
	]]>
	</select>
	
	<update id="updateRecipeReview" parameterType="recipeReview">
		update recipereview set rrtitle = #{rrtitle}, rrcontent = #{rrcontent}
		where rrno = #{rrno}
	</update>
	
	<delete id="deleteRecipeReview">
		delete from recipereview where rrno = #{rrno}
	</delete>
</mapper>