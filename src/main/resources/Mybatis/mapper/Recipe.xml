<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.RecipeDao">

	<insert id="insertRecipe" parameterType="recipe">
		<selectKey keyProperty="rno" resultType="int" order="BEFORE">
			select seq_rno.nextval from dual
		</selectKey>
		insert into Recipe(rno, mid, rtitle, rcontent,rhitcount,rdate, rimgoname,rimgdata,rimgtype,ctno)
		values(#{rno},#{mid},#{rtitle},#{rcontent},0,sysdate,#{rimgoname},#{rimgdata},#{rimgtype},#{ctno})
	</insert>
	
	<insert id="insertRecipItems" parameterType="recipeItem">
		insert into RecipeItem(rno, rino, riname)
		values(#{rno},#{rino},#{riname})
	</insert>
	
	<insert id="insertRecipeProcess" parameterType="recipeProcess">
		insert into RecipeProcess(rporder,rptitle,rpcontent,rpimgoname,rpimgdata,rpimgtype,rno)
		values(#{rporder},#{rptitle},#{rpcontent},#{rpimgoname},#{rpimgdata},#{rpimgtype},#{rno})
	</insert>
	
	<select id="selectRecipeByRno" resultType="recipe">
		select rno, rtitle, rcontent, rhitcount, rdate, mid, rimgdata, rimgtype, rimgoname, ctno
		from recipe
		where rno = #{rno}
	</select>
	
	<select id="selectRecipeProcessByRnoRporder" resultType="recipeProcess">
		select rpimgoname, rpimgdata, rpimgtype
		from recipeprocess
		where rno = #{rno} and rporder = #{rporder}  
	</select>
	
	<select id="selectRecipeItemListByRno" resultType="recipeItem">
		select rino, riname
		from recipeitem
		where rno = #{rno}
		order by rino
	</select>
	
	<select id="selectRecipeProcessListByRno" resultType="recipeProcess">
		select rporder, rptitle, rpcontent
		from recipeprocess
		where rno = #{rno}
		order by rporder
	</select>
	
	<update id="updateRecipeByRno" parameterType="recipe">
		update Recipe set rtitle=#{rtitle}, rcontent=#{rcontent}
		<if test="rimgoname!=null">
			,rimgoname=#{rimgoname}
			,rimgdata=#{rimgdata}
			,rimgtype=#{rimgtype}
		</if>
		where rno=#{rno}
	</update>
	
	<delete id="deleteRecipeItemByRno" parameterType="recipeItem">
		delete from recipeItem where rno=#{rno}
	</delete>
	
	<update id="updateRecipeProcess" parameterType="recipeProcess">
		update RecipeProcess set rptitle=#{rptitle},rpcontent=#{rpcontent}
		<if test="rpimgoname!=null">
			,rpimgoname=#{rpimgoname}
			,rpimgtype=#{rpimgtype}
			,rpimgdata=#{rpimgdata}
		</if>
		where rno=#{rno} and rporder=#{rporder}
	</update>
	
	<delete id="deleteRecipeProcessByRporder" parameterType="recipeProcess"> 
		delete from RecipeProcess where rno=#{rno} and rporder=#{rporder}
	</delete>
	
	<select id="selectLikesByMidRno" parameterType="likes" resultType="likes">
		select *
		from likes
		where rno = #{rno} and mid = #{mid}
	</select>
	
	<insert id="insertLikes" parameterType="likes">
		insert into likes(rno, mid)
		values (#{rno}, #{mid})
	</insert>
	
	<delete id="deleteLikes" parameterType="likes">
		delete from likes where rno= #{rno} and mid = #{mid}
	</delete>
	
	<update id="updateHitcount">
		update recipe set rhitcount = rhitcount + 1
		where rno = #{rno}
	</update>
	
	<select id="selectBestRecipe" parameterType="int" resultType="recipe">
		select rnum, rno, rtitle, rcontent, rdate, rhitcount, mnickname
		from
			(
				select rownum as rnum, rno, rtitle, rcontent, rdate, rhitcount, mnickname
				from recipe, member
				where recipe.mid = member.mid 
				and <![CDATA[to_date(sysdate,'YYYY--MM-DD')-to_date(rdate,'YYYY--MM-DD') < 30]]>
				order by rhitcount desc
			)
		where <![CDATA[rnum <= #{number}]]>
	</select>
	
	<select id="selectTotalCount" parameterType="search" resultType="int">
		select count(*) 
		from(
			select rno, rtitle, rcontent, rhitcount, rdate, mname, reviewCount, ctname, likecount
			from(
			        select r.rno as rno, rtitle, rcontent, rhitcount, rdate, mname, reviewCount, ctname, likecount
			            from recipe r
			            left join (
			                select rno , count(rno) as reviewCount
			                from recipereview
			                group by rno
			            ) rr on rr.rno = r.rno
			            left join(
			            	select rno, count(rno) as likecount
			            	from likes
			            	group by rno
			            ) l on l.rno = r.rno
			            join member m on m.mid = r.mid
			            join category ct on ct.ctno = r.ctno
			      	 where 
			        <if test="searchTitle=='all' || searchTitle=='ingredient'">
							  (r.rno
					            in( 
					            select distinct rno from recipeitem where riname like '%'||#{searchText} ||'%')
						<if test="searchTitle=='all'">
							or (rtitle like '%'||#{searchText} ||'%')
						    or (rcontent like '%'||#{searchText} ||'%'))
						</if>
					</if>
					
					<if test="searchTitle=='titlecontent'">
						((rtitle like '%' || #{searchText} || '%') or (rcontent like '%' || #{searchText} || '%'))
					</if>
					
					<if test="searchTitle=='category'">
						ctname=#{searchText}
					</if>
			    )
		)
	</select>
	
	<select id="selectRecipeList" resultType="recipe">
		select rnum, rno, rtitle, rcontent, rhitcount, rdate, mname, reviewcount, ctname, likecount
				from(
					select rownum as rnum, rno, rtitle, rcontent, rhitcount, rdate, mname, reviewcount, ctname, likecount
					from(
					       select r.rno as rno, rtitle, rcontent, rhitcount, rdate, mname, reviewcount, ctname, likecount
			            	from recipe r
			            	left join (
			                	select rno , count(rno) as reviewcount
			                	from recipereview
			                	group by rno
			            	) rr on rr.rno = r.rno
			            	left join(
			            		select rno, count(rno) as likecount
			            		from likes
			            		group by rno
			            	) l on l.rno = r.rno
			            	join member m on m.mid = r.mid
			            	join category ct on ct.ctno = r.ctno
			      	 		where 
					        <if test="search.searchTitle=='all' || search.searchTitle=='ingredient'">
								   (r.rno in( 
							        select distinct rno from recipeitem where riname like '%'||#{search.searchText} ||'%')
								<if test="search.searchTitle=='all'">
									or (rtitle like '%'||#{search.searchText} ||'%')
								    or (rcontent like '%'||#{search.searchText} ||'%'))
								</if>
							</if>
							
							<if test="search.searchTitle=='titlecontent'">
								((rtitle like '%' || #{search.searchText} || '%') or (rcontent like '%' || #{search.searchText} || '%'))
							</if>
							
							<if test="search.searchTitle=='category'">
								ctname=#{search.searchText}
							</if>
							<if test="search.searchSort==0">
								order by rdate desc
							</if>
							<if test="search.searchSort==1">
								order by rhitcount desc
							</if>
							<if test="search.searchSort==2">
								order by  reviewcount desc nulls last
							</if>
							<if test="search.searchSort==3">
								order by likecount desc nulls last
							</if>
					)
					<![CDATA[ where rownum<=#{pager.endRowNo}]]>
				)
		<![CDATA[ where rnum>=#{pager.startRowNo}]]>
	</select>
	
	<delete id="deleteRecipe">
		delete from recipe where rno = #{rno}
	</delete>
</mapper>